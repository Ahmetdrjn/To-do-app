<!DOCTYPE html>
<html lang="tr">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Yapılacaklar Listesi</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <style>
    .completed {
      text-decoration: line-through;
    }
    .dropdown-menu {
      position: absolute;
      will-change: transform;
      top: 0px;
      left: 0px;
      transform: translate3d(0px, 38px, 0px);
    }
    @keyframes fiveserverInfoPopup {
      0%   {top:-40px;}
      15%  {top:4px;}
      85%  {top:4px;}
      100% {top:-40px;}
    }
    @media (max-width: 640px) {
      #fiveserver-info-wrapper {
        max-width: 98%;
      }
      #fiveserver-info {
        border-radius: 0px;
      }      
    }
  </style>
</head>
<body>
  <div class="d-flex">
    <!-- Sidebar -->
    <!-- Main Content -->
    <div class="flex-grow-1 p-4">
      <h1>Yapılacaklar Listesi</h1>
      <div class="mb-3">
        <input type="text" id="gorevInput" class="form-control" placeholder="Yeni bir görev ekle">
        <button id="gorevEkleBtn" class="btn buttoncolor mt-2">Görev Ekle</button>
      </div>
      <ul id="gorevListesi" class="list-group">
        <!-- Görevler burada görünecek -->
      </ul>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const gorevListesi = document.getElementById('gorevListesi');
      const gorevEkleBtn = document.getElementById('gorevEkleBtn');
      const gorevInput = document.getElementById('gorevInput');

      gorevEkleBtn.addEventListener('click', function() {
        const gorevText = gorevInput.value.trim();
        if (gorevText !== '') {
          addTask(gorevText);
          gorevInput.value = '';
          saveTasks();
        }
      });

      gorevListesi.addEventListener('click', function(e) {
        const taskItem = e.target.closest('li');
        if (e.target.classList.contains('action-btn')) {
          const action = e.target.dataset.action;
          if (action === 'edit') {
            // Edit button clicked
            const taskText = taskItem.querySelector('span').textContent;
            const newTaskText = prompt('Görevi düzenle:', taskText);
            if (newTaskText) {
              taskItem.querySelector('span').textContent = newTaskText;
              saveTasks();
            }
          } else if (action === 'delete') {
            // Delete button clicked
            taskItem.remove();
            saveTasks();
          }
        } else if (e.target.classList.contains('task-checkbox')) {
          // Checkbox clicked
          taskItem.classList.toggle('completed');
          saveTasks();
        } else if (e.target.classList.contains('dropdown-toggle')) {
          // Dropdown button clicked
          const dropdownMenu = taskItem.querySelector('.dropdown-menu');
          dropdownMenu.classList.toggle('show');
        }
      });

      function addTask(text, completed = false) {
        const li = document.createElement('li');
        li.className = 'list-group-item d-flex justify-content-between align-items-center';
        if (completed) {
          li.classList.add('completed');
        }
        li.innerHTML = `
          <div>
            <input type="checkbox" class="task-checkbox" ${completed ? 'checked' : ''}>
            <span>${text}</span>
          </div>
          <div class="dropdown">
            <button class="btn btn-secondary btn-sm dropdown-toggle" type="button">Seçenekler</button>
            <div class="dropdown-menu">
              <a class="dropdown-item action-btn" data-action="edit" href="#">Düzenle</a>
              <a class="dropdown-item action-btn" data-action="delete" href="#">Sil</a>
            </div>
          </div>
        `;
        gorevListesi.appendChild(li);
      }

      function saveTasks() {
        const tasks = [];
        document.querySelectorAll('#gorevListesi li').forEach(item => {
          tasks.push({
            text: item.querySelector('span').textContent.trim(),
            completed: item.classList.contains('completed')
          });
        });
        localStorage.setItem('tasks', JSON.stringify(tasks));
      }

      function loadTasks() {
        const tasks = JSON.parse(localStorage.getItem('tasks')) || [];
        tasks.forEach(task => addTask(task.text, task.completed));
      }

      loadTasks();
    });
  </script>
</body>
</html>
